openapi: 3.0.3
info:
  title: OurKnowledge
  description: Web application for the search of qualified developers for a development project
  version: 1.0.0
servers:
  - url: http://localhost:8181
paths:

  /technology/list:
    get:
      summary: list all relevant technologies
      operationId: listRelevantTechnologies
      tags:
        - technology
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRelevantTechnologiesResponse'

  /technology/add:
    post:
      summary: add technology
      operationId: addTechnology
      tags:
        - technology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addTechnologyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addTechnologyResponse'
        '404':
          description: Not Found - Technology not found
        '409':
          description: Conflict - Duplicate instance exception

  /technology/delete:
    post:
      summary: delete technology from relevant
      operationId: deleteTechnology
      tags:
        - technology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteTechnologyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTechnologyResponse'

  /project/list:
    get:
      summary: list all projects
      operationId: listProjects
      tags:
        - project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectsResponse'

  /project:
    get:
      summary: show project details
      operationId: projectDetails
      tags:
        - project
      requestBody:
        content:
          application/json:

            schema:
              $ref: '#/components/schemas/projectDetailsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectDetailsResponse'

  /project/add:
    post:
      summary: add project
      operationId: addProject
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProjectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addProjectResponse'
        '404':
          description: Not Found - Project not found
        '409':
          description: Conflict - Duplicate instance exception

  /project/delete:
    post:
      summary: delete project
      operationId: deleteProject
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteProjectRequest'
        required: true
      responses:
        '200':
          description: OK

  /user/login:
    post:
      summary: login User
      operationId: login
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'


  /user/profile:
    post:
      summary: showProfileDetails
      operationId: showProfile
      tags:
        - user
      requestBody:
        content:
          application/json:

            schema:
              $ref: '#/components/schemas/profileRequest'

        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileResponse'

  /knowledge/add:
    post:
      summary: add knowledge
      operationId: addKnowledge
      tags:
        - technology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addKnowledgeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileResponse'

  /knowledge/delete:
    post:
      summary: delete knowledge
      operationId: deleteKnowledge
      tags:
        - technology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteKnowledgeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileResponse'

  /knowledge/update:
    post:
      summary: update mainSkill or likeIt
      operationId: updateKnowledge
      tags:
        - technology
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateKnowledgeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileResponse'

components:
  schemas:

    loginRequest:
      type: object
      properties:
        userName:
          type: string
        email:
          type: string
        role:
          type: string


    loginResponse:
      type: object
      properties:
        id:
          type: integer
        userName:
          type: string
        role:
          type: integer

    technologyTree:
      type: object
      properties:
        parentTechnology:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            parentId:
              type: integer
            relevant:
              type: boolean
        childTechnologies:
          type: array
          items:
            $ref: '#/components/schemas/technologyTree'

    knowledgeTree:
      type: object
      properties:
        parentTechnology:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            parentId:
              type: integer
            relevant:
              type: boolean
            knowledge:
              type: object
              properties:
                id:
                  type: integer
                likeIt:
                  type: boolean
                mainSkill:
                  type: boolean
        childrenTechnology:
          type: array
          items:
            $ref: '#/components/schemas/knowledgeTree'

    listRelevantTechnologiesResponse:
      type: object
      properties:
        technologies:
          type: array
          items:
            $ref: '#/components/schemas/technologyTree'

    addTechnologyRequest:
      type: object
      properties:
        name:
          type: string
        parentId:
          type: integer
        userId:
          type: integer

    addTechnologyResponse:
      type: object
      properties:
        technologies:
          type: array
          items:
            $ref: '#/components/schemas/technologyTree'

    deleteTechnologyRequest:
      type: object
      properties:
        userId:
          type: integer
        technologyId:
          type: integer
        deleteChildren:
          type: boolean

    deleteTechnologyResponse:
      type: object
      properties:
        technologies:
          type: array
          items:
            $ref: '#/components/schemas/technologyTree'

    listProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
              status:
                type: string
              startDate:
                type: string

    projectDetailsRequest:
      type: object
      properties:
        projectId:
          type: integer

    projectDetailsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        startDate:
          type: string
        technologies:
          type: array
          items:
            $ref: '#/components/schemas/technologyTree'
        users:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
              email:
                type: string

    addProjectRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
        startDate:
          type: string
        size:
          type: integer
        technologies:
          type: array
          items:
            type: integer

    addProjectResponse:
      type: object
      properties:
        id:
          type: integer

    deleteProjectRequest:
      type: object
      properties:
        projectId:
          type: integer

    profileRequest:
      type: object
      properties:
        profileId:
          type: integer
        userId:
          type: integer
          description: Id from the user who send the petition

    profileResponse:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        startDate:
          type: string
        #projects:
        #  type: array
        #  properties:
        #    project:
        #      type: object
        #      properties:
        #        id:
        #          type: integer
        #        name:
        #          type: string
        knowledgeTreeList:
          type: object
          properties:
            technologies:
              type: array
              items:
                $ref: '#/components/schemas/knowledgeTree'

    addKnowledgeRequest:
      type: object
      properties:
        userId:
          type: integer
        technologyId:
          type: integer
        technologyName:
          type: string
        parentTechnologyId:
          type: integer

    deleteKnowledgeRequest:
      type: object
      properties:
        userId:
          type: integer
        knowledgeId:
          type: integer

    updateKnowledgeRequest:
      type: object
      properties:
        userId:
          type: integer
        knowledgeId:
          type: integer
        mainSkill:
          type: boolean
        likeIt:
          type: boolean